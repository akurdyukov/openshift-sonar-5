#!/bin/bash
ROOT=$OPENSHIFT_DATA_DIR
SONAR_VERSION=5.1
MYSQL_URL="$OPENSHIFT_MYSQL_DB_HOST:$OPENSHIFT_MYSQL_DB_PORT/sonar5"
# Log output of the startupscript to file
exec > ${OPENSHIFT_DATA_DIR}logs/startup.log
exec 2>&1 # Also log stderr

#Log the commands as well
set -v


cd $ROOT

wget http://dist.sonar.codehaus.org/sonarqube-$SONAR_VERSION.zip
unzip sonarqube-$SONAR_VERSION.zip
rm -Rf sonarqube sonarqube-$SONAR_VERSION.zip
mv sonarqube-$SONAR_VERSION sonarqube

cd sonarqube/conf
#sed -i 's/
#//' sonar.properties
sed -i "s/^#sonar.web.host.*$/sonar.web.host=$OPENSHIFT_DIY_IP/" sonar.properties
sed -i "s/^#sonar.web.port.*$/sonar.web.port=$OPENSHIFT_DIY_PORT/" sonar.properties


# Set Wrapper log levels to debug
#sed -i "s/^wrapper.console.loglevel.*$/wrapper.console.loglevel=DEBUG/" wrapper.conf
#sed -i "s/^wrapper.logfile.loglevel.*$/wrapper.logfile.loglevel=DEBUG/" wrapper.conf
#echo -e "\nwrapper.debug=TRUE" >> ${OPENSHIFT_DATA_DIR}sonarqube/conf/wrapper.conf


sed -i "s/^#sonar.jdbc.username.*$/sonar.jdbc.username=$OPENSHIFT_MYSQL_DB_USERNAME/" sonar.properties
sed -i "s/^#sonar.jdbc.password.*$/sonar.jdbc.password=$OPENSHIFT_MYSQL_DB_PASSWORD/" sonar.properties
#sed -i 's/^sonar.jdbc.url/#sonar.jdbc.url/' sonar.properties
sed -i "s/^#sonar.jdbc.url=jdbc:mysql:.*$/sonar.jdbc.url=jdbc:mysql://$MYSQL_URL?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance/" sonar.properties

sed -i "s/^#sonar.web.javaOpts.*$/sonar.web.javaOpts=-Xmx256m -XX:MaxPermSize=80m -XX:+HeapDumpOnOutOfMemoryError -Djava.awt.headless=true -Dfile.encoding=UTF-8 -Djruby.management.enabled=false/" sonar.properties 


# Adapt elasticsearch host to be in permitted range 15000-35530 for openshift, as specified here: https://help.openshift.com/hc/en-us/articles/202185874
# This port is also used for the search client
sed -i "s/^#sonar.search.port=.*$/sonar.search.port=35530/" sonar.properties

# Workaround: Adapt elasticsearch host (address search server is bound to)
# What about the address the search client connects to?

sed -i "s/^#sonar.search.javaOpts=.*$/sonar.search.javaOpts=-Xmx256m -Xms256m -Xss256k -Djava.net.preferIPv4Stack=true -Des.http.port=35530 -Des.network.host=$OPENSHIFT_DIY_IP -Des.network.transport.tcp.port=35529 -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -Des.network.port=35528 -XX:+UseCMSInitiatingOccupancyOnly -XX:+HeapDumpOnOutOfMemoryError -Djava.awt.headless=true/" sonar.properties

# TODO We really could use a sonar.search.host property here, that changed the search client url
#sed -i "s/^#sonar.search.host=.*$/sonar.search.host=$OPENSHIFT_DIY_IP/" sonar.properties


echo -e "\nnetwork.bind_host=${OPENSHIFT_DIY_IP}" >> sonar.properties

cd $OPENSHIFT_DATA_DIR
rm -rf logs
ln -s $OPENSHIFT_LOG_DIR logs

cd $OPENSHIFT_DATA_DIR/sonarqube
rm -rf logs
ln -s $OPENSHIFT_LOG_DIR logs

rm ${OPENSHIFT_DATA_DIR}sonarqube/bin/linux-x86-64/lib/libwrapper*
rm ${OPENSHIFT_DATA_DIR}sonarqube/lib/jsw/wrapper*
curl -o ${OPENSHIFT_DATA_DIR}wrapper-delta-pack-3.5.9.tar.gz http://wrapper.tanukisoftware.com/download/3.5.9/wrapper-delta-pack-3.5.9.tar.gz
tar -zxvf ${OPENSHIFT_DATA_DIR}wrapper-delta-pack-3.5.9.tar.gz -C ${OPENSHIFT_DATA_DIR}
rm ${OPENSHIFT_DATA_DIR}wrapper-delta-pack-3.5.9.tar.gz
cp ${OPENSHIFT_DATA_DIR}wrapper-delta-pack-3.5.9/lib/wrapper.jar ${OPENSHIFT_DATA_DIR}sonarqube/lib/jsw/wrapper.jar
cp ${OPENSHIFT_DATA_DIR}wrapper-delta-pack-3.5.9/bin/wrapper-linux-x86-64 ${OPENSHIFT_DATA_DIR}sonarqube/bin/linux-x86-64/wrapper
cp ${OPENSHIFT_DATA_DIR}wrapper-delta-pack-3.5.9/lib/libwrapper-linux-x86-64.so ${OPENSHIFT_DATA_DIR}sonarqube/bin/linux-x86-64/lib/libwrapper.so
rm -Rf ${OPENSHIFT_DATA_DIR}wrapper-delta-pack-3.5.9/

echo -e "\nwrapper.backend.type=PIPE" >> ${OPENSHIFT_DATA_DIR}sonarqube/conf/wrapper.conf

rm ${OPENSHIFT_DATA_DIR}sonarqube/lib/server/sonar-server-5.1.jar
cp ${OPENSHIFT_REPO_DIR}sonar-server-5.1.jar ${OPENSHIFT_DATA_DIR}sonarqube/lib/server/